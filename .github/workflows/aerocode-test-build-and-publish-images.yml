name: Build and Publish Test Docker Images

on:
  push:
    branches:
      - develop

jobs:
  build-and-publish-test-backend:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend Docker image
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: backend
          file: backend/Dockerfile.test
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/test-backend:latest
            ghcr.io/${{ github.repository }}/test-backend:${{ github.sha }}
          build-args: |
            AEROCODE_TEST_STORAGE_ACCOUNT_NAME=${{ secrets.AEROCODE_TEST_STORAGE_ACCOUNT_NAME }}
            AEROCODE_TEST_STORAGE_ACCOUNT_KEY=${{ secrets.AEROCODE_TEST_STORAGE_ACCOUNT_KEY }}
            AEROCODE_TEST_WAGTAIL_SUPERUSER_USERNAME=${{ secrets.AEROCODE_TEST_WAGTAIL_SUPERUSER_USERNAME }}
            AEROCODE_TEST_WAGTAIL_SUPERUSER_EMAIL=${{ secrets.AEROCODE_TEST_WAGTAIL_SUPERUSER_EMAIL }}
            AEROCODE_TEST_WAGTAIL_SUPERUSER_PASSWORD=${{ secrets.AEROCODE_TEST_WAGTAIL_SUPERUSER_PASSWORD }}

  build-and-publish-test-frontend:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push frontend Docker image
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile.test
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/test-frontend:latest
            ghcr.io/${{ github.repository }}/test-frontend:${{ github.sha }}
          build-args: |
            AEROCODE_TEST_NEXT_PUBLIC_GRAPHQL_URL=${{ secrets.AEROCODE_TEST_NEXT_PUBLIC_GRAPHQL_URL }}
            AEROCODE_TEST_GRAPHQL_URL=${{ secrets.AEROCODE_TEST_GRAPHQL_URL }}
            AEROCODE_TEST_NEXT_PUBLIC_STORAGE_URL=${{ secrets.AEROCODE_TEST_NEXT_PUBLIC_STORAGE_URL }}
            AEROCODE_TEST_MAIL_HOST=${{ secrets.AEROCODE_TEST_MAIL_HOST }}
            AEROCODE_TEST_MAIL_PORT=${{ secrets.AEROCODE_TEST_MAIL_PORT }}
            AEROCODE_TEST_SECURE=${{ secrets.AEROCODE_TEST_SECURE }}
            AEROCODE_TEST_M365_EMAIL_USER=${{ secrets.AEROCODE_TEST_M365_EMAIL_USER }}
            AEROCODE_TEST_M365_EMAIL_PASS=${{ secrets.AEROCODE_TEST_M365_EMAIL_PASS }}
            AEROCODE_TEST_NEXT_PUBLIC_PLUSGRADE_API_KEY=${{ secrets.AEROCODE_TEST_NEXT_PUBLIC_PLUSGRADE_API_KEY }}
            AEROCODE_TEST_NEXT_PUBLIC_PLUSGRADE_OFFER_PID =${{ secrets.AEROCODE_TEST_NEXT_PUBLIC_PLUSGRADE_OFFER_PID }}

  build-and-publish-test-nginx:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push nginx Docker image
      - name: Build and push nginx Docker image
        uses: docker/build-push-action@v6
        with:
          context: nginx
          file: nginx/Dockerfile.test
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/test-nginx:latest
            ghcr.io/${{ github.repository }}/test-nginx:${{ github.sha }}
